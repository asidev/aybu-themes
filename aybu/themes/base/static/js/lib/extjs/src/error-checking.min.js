/*
 * Ext JS Library 3.4.0
 * Copyright(c) 2006-2011 Sencha Inc.
 * licensing@sencha.com
 * http://www.sencha.com/license
 */
Ext.ns("Ext.debug");Ext.debug.Assistant=function(){var a=true;return{enable:function(){a=true},disable:function(){a=false},init:function(c){var b,e=false,d,f;Ext.each(c,function(g){if(this.namespaceExists(g.name)){b=this.getClass(g.name);f=g.instance?this.addInstanceCheck:this.addPrototypeCheck;Ext.each(g.checks,function(h){e=h.intercept==true;d=f.call(this,b,h.name,h.fn,h.intercept==true);if(h.after){h.after(d)}},this)}},this)},namespaceExists:function(b){var c=window,d=true;Ext.each(b.split("."),function(e){if(!Ext.isDefined(c[e])){d=false;return false}c=c[e]});return d},getClass:function(b){var c=window;Ext.each(b.split("."),function(d){c=c[d]});return c},warn:function(){if(a&&window.console){console.warn.apply(console,arguments)}},error:function(){if(a&&window.console){console.error.apply(console,arguments)}},addPrototypeCheck:function(b,e,c,d){return(b.prototype[e]=b.prototype[e][d?"createInterceptor":"createSequence"](c))},addInstanceCheck:function(b,e,c,d){return(b[e]=b[e][d?"createInterceptor":"createSequence"](c))}}}();(function(){var a=Ext.debug.Assistant,b=[];b.push({name:"Ext.util.Observable",checks:[{name:"addListener",intercept:true,fn:function(c,d){if(typeof c=="object"){var e,f;for(e in c){if(!this.filterOptRe.test(e)){f=c[e];f=f&&f.fn?f.fn:f;if(!Ext.isFunction(f)){a.error("Non function passed to event listener",this,e);return false}}}}else{if(!Ext.isFunction(d)){a.error("Non function passed to event listener",this,c)}}},after:function(c){Ext.util.Observable.prototype.on=c}}]});b.push({name:"Ext.Component",checks:[{name:"render",intercept:true,fn:function(d,c){if(!d&&!this.el){a.error("Unable to render to container",this,d)}if(this.contentEl){var e=Ext.getDom(this.contentEl);if(!e){a.error("Specified contentEl does not exist",this,this.contentEl);return false}}}}]});b.push({name:"Ext.Container",checks:[{name:"onBeforeAdd",intercept:true,fn:function(e){if(e.isDestroyed){a.warn("Adding destroyed component to container",e,this)}if(e.renderTo){a.warn("Using renderTo while adding an item to a Container. You should use the add() method or put the item in the items configuration",e,this)}if(e.applyTo){a.warn("Using applyTo while adding an item to a Container. You should use the add() method or put the item in the items configuration",e,this)}var d=this.layout.type;if(d=="container"||d=="auto"){a.warn("A non sizing layout is being used in a container that has child components. This means the child components will not be sized.",this)}}},{name:"lookupComponent",intercept:true,fn:function(e){var d=true;if(Ext.isEmpty(e)){d=false}if(Ext.isString(e)){e=Ext.ComponentMgr.get(comp);d=!Ext.isEmpty(e)}if(!d){a.error("Adding invalid component to container",this,e);return false}}}]});b.push({name:"Ext.DataView",checks:[{name:"initComponent",fn:function(){if(!this.itemSelector){a.error("No itemSelector specified",this)}}},{name:"afterRender",fn:function(){if(!this.store){a.error("No store attached to DataView",this)}}}]});b.push({name:"Ext.Window",checks:[{name:"show",intercept:true,fn:function(){if(this.isDestroyed){a.error("Trying to show a destroyed window. If you want to reuse the window, look at the closeAction configuration.",this);return false}}}]});b.push({name:"Ext.grid.GridPanel",checks:[{name:"initComponent",fn:function(){if(!this.colModel){a.error("No column model specified for grid",this)}if(!this.store){a.error("No store specified for grid",this)}}}]});b.push({name:"Ext.grid.GridView",checks:[{name:"autoExpand",intercept:true,fn:function(){var f=this.grid,c=this.cm;if(!this.userResized&&f.autoExpandColumn){var d=c.getTotalWidth(false),h=this.grid.getGridEl().getWidth(true)-this.getScrollOffset();if(d!=h){var e=c.getIndexById(f.autoExpandColumn);if(e==-1){a.error("The autoExpandColumn does not exist in the column model",f,f.autoExpandColumn);return false}}}}}]});b.push({name:"Ext.chart.Chart",checks:[{name:"initComponent",fn:function(){if(!this.store){a.error("No store specified for chart",this)}}}]});b.push({name:"Ext.tree.TreePanel",checks:[{name:"afterRender",intercept:true,fn:function(){if(!this.root){a.error("No root node specified for tree",this);return false}}}]});b.push({name:"Ext",instance:true,checks:[{name:"extend",intercept:true,fn:function(){if(arguments.length==2&&!arguments[0]){a.error("Invalid base class passed to extend",arguments[0]);return false}if(arguments.length==3){if(!arguments[0]){a.error("Invalid class to extend",arguments[0]);return false}else{if(!arguments[1]){a.error("Invalid base class passed to extend",arguments[1]);return false}}}}},{name:"override",intercept:true,fn:function(d){if(!d){a.error("Invalid class passed to override",d);return false}}}]});b.push({name:"Ext.ComponentMgr",instance:true,checks:[{name:"register",intercept:true,fn:function(d){if(this.all.indexOfKey(d.id)>-1){a.warn("A component with this id already exists",d,d.id)}}},{name:"create",intercept:true,fn:function(c,e){var d=Ext.ComponentMgr.types;if(!c.render){if(c.xtype){if(!d[c.xtype]){a.error("Unknown xtype specified",c,c.xtype);return false}}else{if(!d[e]){a.error("Unknown defaultType specified",c,e);return false}}}}}]});b.push({name:"Ext.layout.FitLayout",checks:[{name:"onLayout",intercept:true,fn:function(){var c=this.container;if(c.items.getCount()>1){a.warn("More than 1 item in the container. A fit layout will only display a single item.",c)}}}]});if(Ext.BLANK_IMAGE_URL=="http://www.extjs.com/s.gif"){a.warn("You should set the Ext.BLANK_IMAGE_URL to reference a local copy.")}a.init(b)})();